// <auto-generated />
using System;
using System.Collections.Generic;
using Bit.FindBit.DataAccess.DbAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bit.FindBit.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251021060043_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bit.FindBit.Core.Entities.Organisation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<string>>("Emails")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Picket")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("RemedyGroups")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("Bit.FindBit.Core.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<string>>("Emails")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uuid");

                    b.Property<List<string>>("RemedyGroups")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThreemaWorkId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Bit.FindBit.Core.Entities.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OrganisationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("PersonId");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("Bit.FindBit.Core.Entities.Person", b =>
                {
                    b.HasOne("Bit.FindBit.Core.Entities.Organisation", "Organisation")
                        .WithMany("Persons")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("Bit.FindBit.Core.Entities.PhoneNumber", b =>
                {
                    b.HasOne("Bit.FindBit.Core.Entities.Organisation", null)
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("OrganisationId");

                    b.HasOne("Bit.FindBit.Core.Entities.Person", null)
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("Bit.FindBit.Core.Entities.Organisation", b =>
                {
                    b.Navigation("Persons");

                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("Bit.FindBit.Core.Entities.Person", b =>
                {
                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
